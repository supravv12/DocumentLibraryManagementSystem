@model DocumentLibraryManagementSystem.Models.DocumentModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>DocumentModel</h4>
    <h3>@ViewBag.IsSuccess</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Category_Id, ViewBag.CategoryList as SelectList, "Select Category", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Category_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sub_Category_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Sub_Category_Id, ViewBag.SubCategoryList as SelectList, "Select SubCategory ", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Sub_Category_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Document_Source_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Document_Source_Id, ViewBag.DocumentSource as SelectList, "Select Document Source ", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Document_Source_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fiscal_Year_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Fiscal_Year_Id, ViewBag.FiscalYear as SelectList, "Select Fiscal Year", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Fiscal_Year_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.StateList != null)
            {
                @Html.DropDownListFor(model => model.State_Id, ViewBag.StateList as SelectList, "Select State", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State_Id, "", new { @class = "text-danger" })

            }

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.District_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.District_Id, ViewBag.DistrictList as SelectList, "Select District", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.District_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Palika_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Palika_Id, ViewBag.PalikaList as SelectList, "Select Palika", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Palika_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Document_Type_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Document_Type_Id, ViewBag.DocumentType as SelectList, "Select Document Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Document_Type_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ImageFile, new { type = "file" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>
@section Scripts{

    <script>
        $(document).ready(function () {
            $("#State_Id").change(function () {
                var selectedCountryId = $(this).val();
                $.ajax({
                    url: "@Url.Action("District", "Ajax")",
                    type: "GET",
                    data: { Sid: selectedCountryId },
                    success: function (data) {
                        $("#District_Id").empty();
                        $("#District_Id").append('<option value="">Select District</option>');
                        $.each(data, function (index, district) {
                            $("#District_Id").append('<option value="' + district.Value + '">' + district.Text + '</option>');
                        });
                    }
                });


            });
            $("#District_Id").change(function () {
                var selectedDistrictId = $(this).val();
                $.ajax({
                    url: "@Url.Action("Palika", "Ajax")",
                    type: "GET",
                    data: { Pid: selectedDistrictId },
                    success: function (data) {
                        $("#Palika_Id").empty();
                        $("#Palika_Id").append('<option value="">Select Palika</option>');
                        $.each(data, function (index, palika) {
                            $("#Palika_Id").append('<option value="' + palika.Value + '">' + palika.Text + '</option>');
                        });
                    }

                });
            });

            $("#Category_Id").change(function () {
                var selectedCategoryId = $(this).val();
                $.ajax({
                    url: "@Url.Action("SubCategoryAjax", "Ajax")",
                    type: "GET",
                    data: { Scid: selectedCategoryId },
                    success: function (data) {
                        $("#Sub_Category_Id").empty();
                        $("#Sub_Category_Id").append('<option value="">Select Sub_Category</option>');
                        $.each(data, function (index, subcategory) {
                            $("#Sub_Category_Id").append('<option value="' + subcategory.Value + '">' + subcategory.Text + '</option>');
                        });
                    }

                });
            });

        });



    </script>


}




